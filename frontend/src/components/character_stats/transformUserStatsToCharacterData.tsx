import type {StatType, UserStats} from "../../types";

function getRandomTwoDecimalPlaces(): number {
    const randomNumber = Math.random(); // Generates a number between 0 (inclusive) and 1 (exclusive)
    const scaledNumber = randomNumber * 100; // Scales to move two decimal places to the left
    const roundedNumber = Math.round(scaledNumber); // Rounds to the nearest whole number
    return roundedNumber / 100; // Scales back to get two decimal places
}

export const transformUserStatsToCharacterData = (data: UserStats | null) => {
    const safeData = data && 'energy' in data ? data : {} as UserStats;
    // –†–∞—Å—á–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —É—Ä–æ–≤–Ω—è
    const xpForNextLevel = 1000;

    const energy = safeData.energy ?? getRandomTwoDecimalPlaces();
    const strength = safeData.strength ?? getRandomTwoDecimalPlaces();
    const agility = safeData.agility ?? getRandomTwoDecimalPlaces();
    const intelligence = safeData.intelligence ?? getRandomTwoDecimalPlaces();
    const focus = safeData.focus ?? getRandomTwoDecimalPlaces();
    const xp = safeData.xp ?? 0;
    const level = safeData.level ?? 0;
    const health = safeData.health ?? getRandomTwoDecimalPlaces() * 100;
    const resource = safeData.resource ?? getRandomTwoDecimalPlaces() * 100;
    const gold = safeData.gold ?? 0;

    const currentLevelXp = xp % xpForNextLevel;
    const levelProgress = Math.min(100, (currentLevelXp / xpForNextLevel) * 100);
    const xpToNextLevel = xpForNextLevel - currentLevelXp;

    return {
        stats: [
            {
                type: 'energy' as StatType,
                name: '‚ö°Ô∏è –≠–Ω–µ—Ä–≥–∏—è',
                icon: '‚ö°Ô∏è',
                value: `${energy}%`,
                progress: energy
            },
            {
                type: 'strength' as StatType,
                name: 'üí™ –°–∏–ª–∞',
                icon: 'üí™',
                value: `${strength}%`,
                progress: strength
            },
            {
                type: 'agility' as StatType,
                name: '‚ö°Ô∏è –õ–æ–≤–∫–æ—Å—Ç—å',
                icon: '‚ö°Ô∏è',
                value: `${agility}%`,
                progress: agility
            },
            {
                type: 'intelligence' as StatType,
                name: 'üß† –ó–Ω–∞–Ω–∏—è',
                icon: 'üß†',
                value: `${intelligence}%`,
                progress: intelligence
            },
            {
                type: 'focus' as StatType,
                name: 'üß† –§–æ–∫—É—Å',
                icon: 'üß†',
                value: `${focus}%`,
                progress: focus
            },
            {
                type: 'level' as StatType,
                name: '‚≠ê –£—Ä–æ–≤–µ–Ω—å',
                icon: '‚≠ê',
                value: level,
                progress: levelProgress,
                additionalInfo: `–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è: ${xpToNextLevel} XP`
            }
        ],
        resources: [
            {icon: '‚ù§Ô∏è', name: '–ó–¥–æ—Ä–æ–≤—å–µ', value: `${health}/100`},
            {icon: 'üîã', name: '–†–µ—Å—É—Ä—Å', value: `${resource}/100`},
            {icon: 'üí∞', name: '–ó–æ–ª–æ—Ç–æ', value: gold.toString()},
            {icon: '‚ú®', name: '–û–ø—ã—Ç', value: xp.toString()}
        ],
        locations: [
            {
                icon: 'üè∞',
                title: '–ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ –î–æ—Å—Ç–∞–≤–∫–∏',
                description: '–ë–æ—Å—Å—ã: –ü–∏—Ü—Ü–∞-–î—Ä–∞–∫–æ–Ω, –†–æ–ª–ª-–ì–æ–ª–µ–º',
                color: '#ff6347'
            },
            {
                icon: 'üåø',
                title: '–ë–æ–ª–æ—Ç–æ –°–∏–¥—è—á–µ—Å—Ç–∏',
                description: '–°–Ω–∏–∂–∞–µ—Ç –≤–∞—à—É —Å–∏–ª—É',
                color: '#20b2aa'
            },
            {
                icon: '‚õ∞Ô∏è',
                title: '–ü–µ—â–µ—Ä—ã –ù–æ—á–Ω—ã—Ö –°–º–µ–Ω',
                description: '–û–ø–∞—Å–Ω–æ–µ –º–µ—Å—Ç–æ —Å –¥–µ–±–∞—Ñ—Ñ–∞–º–∏',
                color: '#6a5acd'
            },
            {
                icon: 'üè†',
                title: '–°–≤—è—Ç–∏–ª–∏—â–µ –î–æ–º–∞—à–Ω–µ–≥–æ –û—á–∞–≥–∞',
                description: '–í–∞—à–µ –º–µ—Å—Ç–æ —Å–∏–ª—ã',
                color: '#ffd700'
            }
        ]
    };
};